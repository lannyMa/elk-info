
## nginx日志格式字段

$remote_addr         与$http_x_forwarded_for 用以记录客户端的ip地址；
$remote_user：       用来记录客户端用户名称；
$time_local  ：      用来记录访问时间与时区；
$request  ：         用来记录请求的url与http协议；
$status     ：       用来记录请求状态；成功是200，
$body_bytes_sent     记录发送给客户端文件主体内容大小；
$http_referer  ：    用来记录从那个页面链接访问过来的；
$http_user_agent：   记录客户毒啊浏览器的相关信息；

$remote_addr, $http_x_forwarded_for 记录客户端IP地址
$remote_user 记录客户端用户名称
$request 记录请求的URL和HTTP协议
$status 记录请求状态
$body_bytes_sent 发送给客户端的字节数，不包括响应头的大小； 该变量与Apache模块mod_log_config里的“%B”参数兼容。
$bytes_sent 发送给客户端的总字节数。
$connection 连接的序列号。
$connection_requests 当前通过一个连接获得的请求数量。
$msec 日志写入时间。单位为秒，精度是毫秒。
$pipe 如果请求是通过HTTP流水线(pipelined)发送，pipe值为“p”，否则为“.”。
$http_referer 记录从哪个页面链接访问过来的
$http_user_agent 记录客户端浏览器相关信息
$request_length 请求的长度（包括请求行，请求头和请求正文）。
$request_time 请求处理时间，单位为秒，精度毫秒； 从读入客户端的第一个字节开始，直到把最后一个字符发送给客户端后进行日志写入为止。
$time_iso8601 ISO8601标准格式下的本地时间。
$time_local 通用日志格式下的本地时间。



通常web服务器放在反向代理的后面，这样就不能获取到客户的IP地址了，通过$remote_addr拿到的IP地址是反向代理服务器的iP地址。反向代理服务器在转发请求的http头信息中，可以增加x_forwarded_for信息，用以记录原有客户端的IP地址和原来客户端的请求的服务器地址；
log_format     mylogformat     ' $http_x_forwarded_for- $remote_user [$time_local] '
                               ' "$request"   '$status $body_bytes_sent'
                            ' "$http_referer" "$http_user_agent" ';

## 默认nginx的日志格式---9个字段
log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';

223.104.63.2 - - [18/Sep/2017:14:16:47 +0800] "GET /xxx HTTP/1.1" 200 3700 "-" "Mozilla/5.0 (Linux; Android 6.0; vivo Y67 Build/MRA58K; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/53.0.2785.49 Mobile MQQBrowser/6.2 TBS/043507 Safari/537.36 MicroMessenger/6.5.13.1100 NetType/2G Language/zh_CN" "-"

## json格式记录--
    log_format json '{"@timestamp": "$time_iso8601",'
    '"@version": "1",'
    '"client": "$remote_addr",'
    '"url": "$uri", '
    '"status": $status, '
    '"domain": "$host", '
    '"host": "$server_addr",'
    '"size":"$body_bytes_sent", '
    '"response_time": $request_time, '
    '"referer": "$http_referer", '
    '"http_x_forwarded_for": "$http_x_forwarded_for", '
    '"ua": "$http_user_agent" } ';

{"@timestamp": "2017-09-18T13:15:15+08:00","@version": "1","client": "192.168.1.202","url": "/404.html", "status": 404, "domain": "192.168.6.104", "host": "192.168.6.104","size":"3650", "response_time": 0.000, "referer": "http://192.168.6.104/", "http_x_forwarded_for": "-", "ua": "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.90 Safari/537.36" }



## 生产环境nginx日志
    log_format    main  '$remote_addr $remote_user [$time_local] "$request" $http_host '
    '$status $upstream_status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" $ssl_protocol $ssl_cipher $upstream_addr '
    '$request_time $upstream_response_time';

100.116.200.22 - [18/Sep/2017:14:45:44 +0800] "HEAD / HTTP/1.0" - 301 - 0 "-" "-" - - - 0.000 -
  100.97.14.23 - [18/Sep/2017:14:48:39 +0800] "GET /wp-login.php HTTP/1.0" www.pp100.com 301 - 255 "-" "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:40.0) Gecko/20100101 Firefox/40.1" - - - 0.000 -



## x-formward-for--代理nginx设置访问者ip字段,传给后端
    upstream mz6g {
        server 192.168.6.24:5005;
    }
    server {
        listen       5005;
        server_name  channela.pp100.com;
        location / {
            proxy_next_upstream error timeout invalid_header http_500 http_503 http_404 http_502 http_504;
            proxy_pass http://mz6g;
            proxy_set_header Host $host;   # 传递header,当后端有多个虚拟主机时候用于区分
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # 将客户端真实ip传递给后端
        }
    }

192.168.1.202 - - [16/Sep/2017:05:57:48 +0800] "POST /socket.io/?EIO=3&transport=polling&t=Lw7Yqcs&sid=I6np2-tORNSXQn2MAABh HTTP/1.1" 200 2 "http://md.pp100.net/KYYwZgnADAjCIFowA4CsAjBAWAhmGCE6OWCqAbOmAMxYDsdOwWwQA===" "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) HackMD/0.0.3 Chrome/56.0.2924.87 Electron/1.6.4 Safari/537.36"


proxy_set_header Host $host;
proxy_set_header X-Real-IP $remote_addr;                      # 后端 web 服务器可以获取用户的真实 ip
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # 增加一个 $proxy_add_x_forwarded_for 到 X-Forwarded-For 里去,默认的 X-Forwarded-For 值是空的


X-real-ip 的用途是为了后端 web 服务器可以获取用户的真实 ip

X_Forward_For  表示该条 http 请求是由谁发起的
X-Forwarded-For: client, proxy2, proxy1
从标准格式可以看出，X-Forwarded-For头信息可以有多个，中间用逗号分隔，第一项为真实的客户端ip，剩下的就是曾经经过的代理或负载均衡的ip地址，经过几个就会出现几个。
  追溯历史，这个 X-Forwarded-For 变量，是 squid 开发的，用于识别请求通过了哪些 HTTP 代理或负载平衡器，记录相应 IP 地址列表的非 rfc 标准，如果设置了 X-Forwarded-For ，那么每次经过 proxy 转发请求后都会有记录


## 其他
kill -USR1 `cat /usr/local/nginx/logs/nginx.pid `  # nginx日志自动切割一次


e ---> lb---> nginx

{"@timestamp": "2017-09-18T16:28:59+08:00","@version": "1","client": "192.168.8.189","url": "/404.html", "status": 404, "domain": "tmp.pp100.net", "host": "192.168.6.104","size":"3650", "response_time": 0.001, "referer": "http://tmp.pp100.net/", "http_x_forwarded_for": "192.168.1.202", "ua": "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.90 Safari/537.36" }

e --> lb --> lb --> nginx
{"@timestamp": "2017-09-18T17:11:58+08:00","@version": "1","client": "192.168.8.189","url": "/index.html", "status": 200, "domain": "tmp.pp100.net", "host": "192.168.6.104","size":"3700", "response_time": 0.000, "referer": "-", "http_x_forwarded_for": "192.168.14.133, 192.168.1.202", "ua": "Links (2.13; Linux 3.10.0-514.el7.x86_64 x86_64; GNU C 4.8.5; text)" }


## 参考
https://www.elastic.co/guide/en/beats/filebeat/master/exported-fields-nginx.html